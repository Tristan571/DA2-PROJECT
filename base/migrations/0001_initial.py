# Generated by Django 4.1.7 on 2023-05-17 07:32

import datetime
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('authorID', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('bookID', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, upload_to='static/images/')),
                ('year', models.IntegerField(blank=True, default=2023)),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('stock', models.IntegerField(blank=True, default=0)),
                ('condition', models.IntegerField(blank=True, default=100)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(default=datetime.datetime(2023, 5, 17, 7, 32, 44, 639444, tzinfo=datetime.timezone.utc))),
                ('quantity', models.IntegerField(blank=True, default=0)),
                ('authorID', models.ManyToManyField(to='base.author')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('languageID', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('positionID', models.AutoField(primary_key=True, serialize=False)),
                ('floor', models.CharField(choices=[('1', 'F1'), ('2', 'F2'), ('3', 'F3'), ('4', 'F4')], max_length=20)),
                ('shelf', models.CharField(blank=True, choices=[('1', 'Shelf 1'), ('2', 'Shelf 2'), ('3', 'Shelf 3'), ('4', 'Shelf 4'), ('5', 'Shelf 5'), ('6', 'Shelf 6'), ('7', 'Shelf 7'), ('8', 'Shelf 8'), ('9', 'Shelf 9'), ('10', 'Shelf 10')], max_length=20)),
                ('row', models.CharField(choices=[('1', 'Row 1'), ('2', 'Row 2'), ('3', 'Row 3'), ('4', 'Row 4'), ('5', 'Row 5')], max_length=20)),
                ('bay', models.CharField(choices=[('A', 'Bay A'), ('B', 'Bay B')], max_length=20)),
                ('maxCarry', models.IntegerField(default=80)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('publisherID', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topicID', models.CharField(help_text='Topic ID: TP + (A number). EX: TP01', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('1', 'Admin'), ('2', 'Librarian'), ('3', 'Reader'), ('4', 'Manager'), ('5', 'Clerk')], default='3', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('idCard', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20)),
                ('readerCard', models.CharField(default='1111111111', editable=False, max_length=10, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookRental',
            fields=[
                ('rentalID', models.AutoField(primary_key=True, serialize=False)),
                ('rentCondition', models.IntegerField(blank=True)),
                ('rentDate', models.DateTimeField(default=datetime.datetime(2023, 5, 17, 7, 32, 44, 641442, tzinfo=datetime.timezone.utc))),
                ('returnCondition', models.IntegerField(blank=True, default=models.IntegerField(blank=True), null=True)),
                ('returnDate', models.DateTimeField(blank=True, null=True)),
                ('extraFee', models.IntegerField(blank=True)),
                ('totalFee', models.IntegerField(blank=True, default=0)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-rentDate'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='languageID',
            field=models.ManyToManyField(to='base.language'),
        ),
        migrations.AddField(
            model_name='book',
            name='positionID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.position'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisherID',
            field=models.ManyToManyField(to='base.publisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='topicID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.topic'),
        ),
    ]
